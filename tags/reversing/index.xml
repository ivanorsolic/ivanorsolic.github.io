<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reversing on Ori&#39;s blog</title>
    <link>https://ivanorsolic.github.io/tags/reversing/</link>
    <description>Recent content in Reversing on Ori&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ivanorsolic.github.io/tags/reversing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hardware hacking tutorial: Dumping and reversing firmware</title>
      <link>https://ivanorsolic.github.io/post/hardwarehacking1/</link>
      <pubDate>Fri, 01 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ivanorsolic.github.io/post/hardwarehacking1/</guid>
      <description>The idea So you might just have an old router or device lying around, and you&amp;rsquo;re interested what you can find inside. Or, you&amp;rsquo;re legitimately worried that your devices aren&amp;rsquo;t safe, or contain some oversight made by engineers in terms of security.
Unfortunately, the latter is very much true, very often. Not by all companies, even by some of the best companies, embedded security is a huge oversight, and an even bigger problem in the years coming, since the number of devices connected to the internet is exponentially growing.</description>
    </item>
    
    <item>
      <title>Hardware hacking tutorial: Reversing and emulating firmware</title>
      <link>https://ivanorsolic.github.io/post/hardwarehacking2/</link>
      <pubDate>Fri, 01 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ivanorsolic.github.io/post/hardwarehacking2/</guid>
      <description>The idea In a previous tutorial, we&amp;rsquo;ve talked about how embedded devices can have vulnerabilities inside, and one way to detect them, and to protect yourself from them, is to check them out by yourself.
This will be focusing on the same idea, just without dumping the firmware yourself. Perhaps it is a new firmware update you want to flash to your device, and you have the file on your PC.</description>
    </item>
    
    <item>
      <title>Hardware hacking tutorial: Interfacing with debug ports</title>
      <link>https://ivanorsolic.github.io/post/hardwarehacking3/</link>
      <pubDate>Thu, 31 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ivanorsolic.github.io/post/hardwarehacking3/</guid>
      <description>The idea In the past two post, we&amp;rsquo;ve seen that we can dump firmware directly from the flash chip, or that we can reverse engineer the firmware found online for our devices.
But why bother, if we have a debug port out in the open?
Let&amp;rsquo;s try it out.
Used gear CJMCU-232H FTDI 232H is a chip made by Future Technology Devices International. CJMCU-232H is a breakout board with a 232H chip integrated which allows users easily use the chip via USB.</description>
    </item>
    
  </channel>
</rss>