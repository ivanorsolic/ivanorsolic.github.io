<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Embedded on Ori&#39;s blog</title>
    <link>https://ivanorsolic.github.io/tags/embedded/</link>
    <description>Recent content in Embedded on Ori&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ivanorsolic.github.io/tags/embedded/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Athena</title>
      <link>https://ivanorsolic.github.io/project/athena/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanorsolic.github.io/project/athena/</guid>
      <description></description>
    </item>
    
    <item>
      <title>AI and OCR: Volunteering.today</title>
      <link>https://ivanorsolic.github.io/post/ai-and-ocr---volunteeringtoday/</link>
      <pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ivanorsolic.github.io/post/ai-and-ocr---volunteeringtoday/</guid>
      <description>Volunteering.today Recently, my team and I were competing an the ChangeCode hackathon in Zagreb, at the King ICT company.
The task was helping three kinds of people:
 Volunteering centers Volunteering event organizers Volunteers  We were free to come up with anything we thought would be helpful, and we had 24 hours to do so. We managed to get 10.000 HRK award, and an offer to continue working on the app to implement it completely with the organizers.</description>
    </item>
    
    <item>
      <title>Hardware hacking tutorial: Dumping and reversing firmware</title>
      <link>https://ivanorsolic.github.io/post/hardwarehacking1/</link>
      <pubDate>Fri, 01 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ivanorsolic.github.io/post/hardwarehacking1/</guid>
      <description>The idea So you might just have an old router or device lying around, and you&amp;rsquo;re interested what you can find inside. Or, you&amp;rsquo;re legitimately worried that your devices aren&amp;rsquo;t safe, or contain some oversight made by engineers in terms of security.
Unfortunately, the latter is very much true, very often. Not by all companies, even by some of the best companies, embedded security is a huge oversight, and an even bigger problem in the years coming, since the number of devices connected to the internet is exponentially growing.</description>
    </item>
    
    <item>
      <title>Hardware hacking tutorial: Reversing and emulating firmware</title>
      <link>https://ivanorsolic.github.io/post/hardwarehacking2/</link>
      <pubDate>Fri, 01 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ivanorsolic.github.io/post/hardwarehacking2/</guid>
      <description>The idea In a previous tutorial, we&amp;rsquo;ve talked about how embedded devices can have vulnerabilities inside, and one way to detect them, and to protect yourself from them, is to check them out by yourself.
This will be focusing on the same idea, just without dumping the firmware yourself. Perhaps it is a new firmware update you want to flash to your device, and you have the file on your PC.</description>
    </item>
    
    <item>
      <title>Car hacking tutorial: Replay attack /w SDR</title>
      <link>https://ivanorsolic.github.io/post/car-hacking/</link>
      <pubDate>Thu, 31 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ivanorsolic.github.io/post/car-hacking/</guid>
      <description>Replay attacks Image taken from: NullBytesIf you want to find out what SDR is, check out my other post:
Tempest attacks
Remote keyless systems Wiki defines RKS as:
 The term remote keyless system (RKS), also called keyless entry or remote central locking, refers to a lock that uses an electronic remote control as a key which is activated by a handheld device or automatically by proximity.
 As we all well know, today&amp;rsquo;s cars all have keys that can remotely unlock your car with the push of a button.</description>
    </item>
    
    <item>
      <title>Hardware hacking tutorial: Interfacing with debug ports</title>
      <link>https://ivanorsolic.github.io/post/hardwarehacking3/</link>
      <pubDate>Thu, 31 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ivanorsolic.github.io/post/hardwarehacking3/</guid>
      <description>The idea In the past two post, we&amp;rsquo;ve seen that we can dump firmware directly from the flash chip, or that we can reverse engineer the firmware found online for our devices.
But why bother, if we have a debug port out in the open?
Let&amp;rsquo;s try it out.
Used gear CJMCU-232H FTDI 232H is a chip made by Future Technology Devices International. CJMCU-232H is a breakout board with a 232H chip integrated which allows users easily use the chip via USB.</description>
    </item>
    
    <item>
      <title>Snagging creds /w Responder.py</title>
      <link>https://ivanorsolic.github.io/post/responder/</link>
      <pubDate>Sat, 28 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ivanorsolic.github.io/post/responder/</guid>
      <description>Snagging credentials Image taken from: DashlaneThis tutorial will go through stealing credentials from a fully locked, fully patched (at the time of writing) Windows, Mac OS X or Linux machine.
Since the time of writing, the attack has become very well documented on the internet, and patches were released from OS manufacturers such as Microsoft1. Unfortunately, even after testing the attack on a Windows 10 PC with the newest patches, it was still successful.</description>
    </item>
    
  </channel>
</rss>